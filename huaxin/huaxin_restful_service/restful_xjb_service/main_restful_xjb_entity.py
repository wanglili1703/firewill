# coding: utf-8
from _common.global_controller import GlobalController
from _common.utility import Utility
from _tools.mysql_xjb_tools import MysqlXjbTools
from code_gen.lib.service_entity_factory import EntityFactory
from huaxin_restful_service.restful_xjb_service.v1_services_account_cebbankquotaformbean_entity import \
    V1ServicesAccountCebbankquotaformbeanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_confirmsalaryfinplan_entity import \
    V1ServicesAccountConfirmsalaryfinplanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_isdisplaycaptchacode_entity import \
    V1ServicesAccountIsdisplaycaptchacodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_matchsalarycard_entity import \
    V1ServicesAccountMatchsalarycardEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_realnameauthvalidate_entity import \
    V1ServicesAccountRealnameauthvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_savesmsloginstatus_entity import \
    V1ServicesAccountSavesmsloginstatusEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_stopsalaryfinplan_entity import \
    V1ServicesAccountStopsalaryfinplanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_stopsalaryfinplanvalidate_entity import \
    V1ServicesAccountStopsalaryfinplanvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_tradepasswordcheckinfo_entity import \
    V1ServicesAccountTradepasswordcheckinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_tradepasswordvalidate_entity import \
    V1ServicesAccountTradepasswordvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_bankchannellist_entity import \
    V1ServicesCardBankchannellistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_delete_entity import V1ServicesCardDeleteEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_deletevalidate_entity import \
    V1ServicesCardDeletevalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_getcustcardlist_entity import \
    V1ServicesCardGetcustcardlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_getmobilecode_entity import \
    V1ServicesCardGetmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_getsalarycardinfo_entity import \
    V1ServicesCardGetsalarycardinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_newbinding_entity import \
    V1ServicesCardNewbindingEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_settradepassword_entity import \
    V1ServicesCardSettradepasswordEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_signagain_entity import V1ServicesCardSignagainEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_signagaingetmobilecode_entity import \
    V1ServicesCardSignagaingetmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_acquiredeviceid_entity import \
    V1ServicesCommonAcquiredeviceidEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_addfav_entity import V1ServicesCommonAddfavEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_delfav_entity import V1ServicesCommonDelfavEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_getdoclist_entity import \
    V1ServicesCommonGetDocListEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_getfunctionlist_entity import \
    V1ServicesCommonGetFunctionListEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_getmaxim_entity import V1ServicesCommonGetmaximEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_uploadgeographiclocation_entity import \
    V1ServicesCommonUploadgeographiclocationEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_autorepayclose_entity import \
    V1ServicesCreditcardAutorepaycloseEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_autorepaydetail_entity import \
    V1ServicesCreditcardAutorepaydetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_autorepayopen_entity import \
    V1ServicesCreditcardAutorepayopenEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_bankchannellist_entity import \
    V1ServicesCreditcardbankchannellistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_carddetail_entity import \
    V1ServicesCreditcardCarddetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_queryrepayresult_entity import \
    V1ServicesCreditcardQueryrepayresultEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_addfav_entity import V1ServicesCustinfoAddfavEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_delfav_entity import V1ServicesCustinfoDelfavEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_getcustbaseinfo_entity import \
    V1ServicesCustinfoGetcustbaseinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_getprovinceandcity_entity import \
    V1ServicesCustinfoGetprovinceandcityEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_isfav_entity import V1ServicesCustinfoIsfavEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_levelformdata_entity import \
    V1ServicesCustinfoLevelformdataEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_myinviter_entity import \
    V1ServicesCustinfoMyinviterEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_setmyinviter_entity import \
    V1ServicesCustinfoSetmyinviterEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_allchannel_entity import V1ServicesFundAllchannelEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_compare_entity import V1ServicesFundCompareEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_csiexponent_entity import \
    V1ServicesFundCsiexponentEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_eight_part_entity import \
    V1ServicesFundIndexchannelEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_estimateleaderboard_entity import \
    V1ServicesFundEstimateleaderboardEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_expertsay_entity import V1ServicesFundExpertsayEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_favfundestimatenav_entity import \
    V1ServicesFundFavfundestimatenavEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_fundsizer_entity import V1ServicesFundFundsizerEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_all_fundsizer_entity import \
    V1ServicesFundAllFundsizerEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_alllist_entity import V1ServicesFundAlllistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_getcurrentestimatenav_entity import \
    V1ServicesFundGetcurrentestimatenavEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_indexfour_entity import V1ServicesFundIndexfourEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_intelligentsay_entity import \
    V1ServicesFundIntelligentsayEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_makeinvestplanvalidate_entity import \
    V1ServicesFundMakeinvestplanvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_marketexponent_entity import \
    V1ServicesFundMarketexponentEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_navhistory_entity import V1ServicesFundNavhistoryEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_orgviewpoint_entity import \
    V1ServicesFundOrgviewpointEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_profithistory_entity import \
    V1ServicesFundProfithistoryEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_researchreport_entity import \
    V1ServicesFundResearchreportEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_sfchartinfo_entity import \
    V1ServicesFundsfchartinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_trending_entity import V1ServicesFundTrendingEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_type_fundsizer_entity import \
    V1ServicesFundTypeFundsizerEntity
from huaxin_restful_service.restful_xjb_service.v1_services_get_fund_info_entity import \
    V1ServicesFundGetfundinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_getfundmanager_entity import \
    V1ServicesFundGetfundmanagerEntity
from huaxin_restful_service.restful_xjb_service.v1_services_info_getcategorylist_entity import \
    V1ServicesInfoGetcategorylistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_login_dologin_entity import V1ServicesLoginDologinEntity
from huaxin_restful_service.restful_xjb_service.v1_services_login_dologinnew_entity import \
    V1ServicesLoginDologinnewEntity
from huaxin_restful_service.restful_xjb_service.v1_services_marketing_getproductmarketinginfo_entity import \
    V1ServicesMarketingGetProductMarketingInfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_message_indextips_entity import \
    V1ServicesMessageIndextipsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_canusedpointscount_entity import \
    V1ServicesPointsCanusedpointscountEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_earnpoints_entity import \
    V1ServicesPointsEarnpointsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_getcouponinfo_entity import \
    V1ServicesPointsGetcouponinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_getpointsdeducterules_entity import \
    V1ServicesPointsGetpointsdeducterulesEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_getpointsdescription_entity import \
    V1ServicesPointsGetpointsdescriptionEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_getpointsissueeventrules_entity import \
    V1ServicesPointsGetpointsissueeventrulesEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_mypoints_entity import V1ServicesPointsMypointsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_pointsdetail_entity import \
    V1ServicesPointsPointsdetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_spendpoints_entity import \
    V1ServicesPointsSpendpointsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_allproducttypes_entity import \
    V1ServicesProductAllproducttypesEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_cantransferfundlist_entity import \
    V1ServicesProductCantransferfundlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_searchallfinproduct_entity import \
    V1ServicesProductSearchallfinproductEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_searchallproduct_entity import \
    V1ServicesProductSearchallproductEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_searchcantransferfundlist_entity import \
    V1ServicesProductSearchcantransferfundlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_sellnotice_entity import \
    V1ServicesProductSellnoticeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_sellproductlist_entity import \
    V1ServicesProductSellproductlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_transfertofundinfo_entity import \
    V1ServicesProductTransfertofundinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_transfertofundtip_entity import \
    V1ServicesProductTransfertofundtipEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vipproductdetail_entity import \
    V1ServicesProductVipproductdetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vippurchaserate_entity import \
    V1ServicesProductVippurchaserateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vipredeemrate_entity import \
    V1ServicesProductVipredeemrateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_register_confirm_entity import \
    V1ServicesRegisterConfirmEntity
from huaxin_restful_service.restful_xjb_service.v1_services_register_getmobilecode_entity import \
    V1ServicesRegisterGetmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_register_verifyid_entity import \
    V1ServicesRegisterVerifyidEntity
from huaxin_restful_service.restful_xjb_service.v1_services_repay_check_entity import V1ServicesRepayCheckEntity
from huaxin_restful_service.restful_xjb_service.v1_services_repay_checkraisequota_entity import \
    V1ServicesRepayCheckraisequotaEntity
from huaxin_restful_service.restful_xjb_service.v1_services_repay_getplandetail_entity import \
    V1ServicesRepayGetplandetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_repay_getplanlist_entity import \
    V1ServicesRepayGetplanlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_repay_getrepaytip_entity import \
    V1ServicesRepayGetrepaytipEntity
from huaxin_restful_service.restful_xjb_service.v1_services_repay_makeplan_entity import V1ServicesRepayMakeplanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_repay_makeplanvalidate_entity import \
    V1ServicesRepayMakeplanvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_repay_updateplan_entity import \
    V1ServicesRepayUpdateplanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_repay_updateplanvalidate_entity import \
    V1ServicesRepayUpdateplanvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_risk_savequestion_entity import \
    V1ServicesRiskSavequestionEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_checktradepassword_entity import \
    V1ServicesSecurityChecktradepasswordEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_modifymobilechecknewmobilecode_entity import \
    V1ServicesSecurityModifymobilechecknewmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_modifymobilecheckoldmobilecode_entity import \
    V1ServicesSecurityModifymobilecheckoldmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_modifymobilegetnewmobilecode_entity import \
    V1ServicesSecurityModifymobilegetnewmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_modifymobilegetoldmobilecode_entity import \
    V1ServicesSecurityModifymobilegetoldmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_modifypwdcheckpassword_entity import \
    V1ServicesSecurityModifypwdcheckpasswordEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_modifypwdsetpassword_entity import \
    V1ServicesSecurityModifypwdsetpasswordEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_modifytradepassword_entity import \
    V1ServicesSecurityModifytradepasswordEntity
from huaxin_restful_service.restful_xjb_service.v1_services_stock_getassetinfo_entity import \
    V1ServicesStockGetassetinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_assetdetaillist_entity import \
    V1ServicesTradeAssetdetaillistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_assettotal_entity import \
    V1ServicesTradeAssettotalEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_caltaipfee_entity import \
    V1ServicesTradeCaltaipfeeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_confirm_entity import V1ServicesTradeConfirmEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_dqbredeemincomeinfo_entity import \
    V1ServicesTradeDqbredeemincomeinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_dqbredeemvalidate_entity import \
    V1ServicesTradeDqbredeemvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_enchargevalidate_entity import \
    V1ServicesTradeEnchargevalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_getloanrepayinfo_entity import \
    V1ServicesTradeGetloanrepayinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_indextotalasset_entity import \
    V1ServicesTradeIndextotalassetEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_loanrepayapply_entity import \
    V1ServicesTradeLoanrepayapplyEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_loanrepaydetaillist_entity import \
    V1ServicesTradeLoanrepaydetaillistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_modifyexpiredisposetype_entity import \
    V1ServicesTradeModifyexpiredisposetypeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_modifyexpiredisposetypetip_entity import \
    V1ServicesTradeModifyexpiredisposetypetipEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_mydqbdetail_entity import \
    V1ServicesTradeMydqbdetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_myfunddetail_entity import \
    V1ServicesTradeMyfunddetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_myfundlist_entity import \
    V1ServicesTradeMyfundlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_myholdlist_entity import \
    V1ServicesTradeMyholdlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_myreservationcodes_entity import \
    V1ServicesTradeMyreservationcodesEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_myvipproductdetail_entity import \
    V1ServicesTradeMyvipproductdetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_purchasevalidate_entity import \
    V1ServicesTradePurchasevalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_queryreservationcode_entity import \
    V1ServicesTradeQueryreservationcodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_rechargetipinfo_entity import \
    V1ServicesTradeRechargetipinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_matchchannel_entity import \
    V1ServicesCardMatchchannelEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_redeem_entity import \
    V1ServicesTradeRedeemEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_tradelist_entity import \
    V1ServicesTradeTradelistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_vipfinancialredeemtip_entity import \
    V1ServicesTradeVipfinancialredeemtipEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_vipfinancialredeemvalidate_entity import \
    V1ServicesTradeVipfinancialredeemvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_vipratehistory_entity import \
    V1ServicesTradeVipratehistoryEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_withdrawquery_entity import \
    V1ServicesTradeWithdrawqueryEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_withdrawtipinfo_entity import \
    V1ServicesTradeWithdrawtipinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_withdrawvalidate_entity import \
    V1ServicesTradeWithdrawvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_xjblastprofit_entity import \
    V1ServicesTradeXjblastprofitEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_xjbtradelist_entity import \
    V1ServicesTradeXjbtradelistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_all_starlevelsort_entity import \
    V1ServicesFundAllStarlevelsortEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_all_order_starlevelsort_entity import \
    V1ServicesFundAllOrderStarlevelsortEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_order_starlevelsort_entity import \
    V1ServicesFundOrderStarlevelsortEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_starlevelsort_entity import \
    V1ServicesFundStarlevelsortEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_choicenesslist_entity import \
    V1ServicesFundChoicenesslistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_fundcompanylist_entity import \
    V1ServicesFundFundcompanylistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_fundtypelist_entity import \
    V1ServicesFundFundtypelistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_newfund_entity import \
    V1ServicesFundNewfundEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_getcustcards_entity import \
    V1ServicesCreditcardGetcustcardsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_cardstatusinfo_entity import \
    V1ServicesCreditcardCardstatusinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_getmobilecode_entity import \
    V1ServicesCreditcardGetmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_bind_entity import \
    V1ServicesCreditcardBindEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_matchchannel_entity import \
    V1ServicesCreditcardMatchchannelEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_savecombination_entity import \
    V1ServicesCustinfoSavecombinationEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_repayvalidate_entity import \
    V1ServicesCreditcardRepayvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_defaultrepaydate_entity import \
    V1ServicesCreditcardDefaultrepaydateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_setrepayremind_entity import \
    V1ServicesCreditcardSetrepayremindEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_deletecardvalidate_entity import \
    V1ServicesCreditcardDeletecardvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_repay_entity import \
    V1ServicesCreditcardRepayEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_yyrepayvalidate_entity import \
    V1ServicesCreditcardYyrepayvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_actualrepaydate_entity import \
    V1ServicesCreditcardActualrepaydateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_yycancel_entity import \
    V1ServicesCreditcardYycancelEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_searchsuggestion_entity import \
    V1ServicesFundSearchsuggestionEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_findhotsearchproduct_entity import \
    V1ServicesFundFindhotsearchproductEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_cardwithdrawlimit_entity import \
    V1ServicesTradeCardwithdrawlimitEntity
from huaxin_restful_service.restful_xjb_service.v1_services_marketing_indexlist_entity import \
    V1ServicesMarketingIndexlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_leftamt_entity import V1ServicesTradeLeftamtEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_caltfee_entity import V1ServicesTradeCaltfeeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_getfundpurchaserate_entity import \
    V1ServicesFundGetfundpurchaserateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_caltvalue_entity import V1ServicesTradeCaltvalueEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_isjointcard_entity import \
    V1ServicesCardIsjointcardEntity
from huaxin_restful_service.restful_xjb_service.v1_services_jointcard_activition_entity import \
    V1ServicesJointcardActivitionEntity
from huaxin_restful_service.restful_xjb_service.v1_services_jointcard_getmobilecode_entity import \
    V1ServicesJointcardGetmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_jointcard_getcustcards_entity import \
    V1ServicesJointcardGetcustcardsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_jointcard_confirmjointcardlimits_entity import \
    V1ServicesJointcardConfirmjointcardlimitsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_jointcard_getcustcarddetail_entity import \
    V1ServicesJointcardGetcustcarddetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_jointcard_setjointcardlimits_entity import \
    V1ServicesJointcardSetjointcardlimitsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_login_dologout import V1ServicesLoginLogout
from huaxin_restful_service.restful_xjb_service.v1_services_card_getmobilecodeupgrade_entity import \
    V1ServicesCardGetmobilecodeupgradeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_getmobilecodeupgradeconfirm_entity import \
    V1ServicesCardGetmobilecodeupgradeconfirmEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_bindingresult_entity import \
    V1ServicesCardBindingresultEntity
from huaxin_restful_service.restful_xjb_service.ceb_dopost_entity import CebDopostEntity
from huaxin_restful_service.restful_xjb_service.pwap_agreeepaysignpre_do_entity import PwapAgreeepaysignpreDoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_couponlist_entity import \
    V1ServicesPointsCouponlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_revokevalidate_entity import \
    V1ServicesTradeRevokevalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_tradedetail_entity import \
    V1ServicesTradeTradedetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_dqbproductlist_entity import \
    V1ServicesProductDqbproductlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_hotproductlist_entity import \
    V1ServicesProductHotproductlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vipproductlist_entity import \
    V1ServicesProductVipproductlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_risk_setqualifiedinvestor_entity import \
    V1ServicesRiskSetqualifiedinvestorEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_indexincomeinfo_entity import \
    V1ServicesTradeIndexincomeinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_loaninfo_entity import V1ServicesTradeLoaninfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_myloanlist_entity import \
    V1ServicesTradeMyloanlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_getloanapplyinfo_entity import \
    V1ServicesTradeGetloanapplyinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_loanproductdetail_entity import \
    V1ServicesTradeLoanproductdetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_loanapply_entity import \
    V1ServicesTradeLoanapplyEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_handleinvestplanvalidate_entity import \
    V1ServicesFundHandleinvestplanvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_myinvestplan_entity import \
    V1ServicesFundMyinvestplanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_risk_getquestionbytype_entity import \
    V1ServicesRiskGetquestionbytypeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_loanproductlist_entity import \
    V1ServicesTradeLoanproductlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_getagreements_entity import \
    V1ServicesCommonGetagreementsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_getnextpayday_entity import \
    V1ServicesTradeGetnextpaydayEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_makesalaryfinplan_entity import \
    V1ServicesTradeMakesalaryfinplanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_updatesalaryfinplan_entity import \
    V1ServicesTradeUpdatesalaryfinplanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_getsalaryfinplan_entity import \
    V1ServicesTradeGetsalaryfinplanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_getmemberlevelrightslist_entity import \
    V1ServicesCustinfoGetmemberlevelrightslistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_getmemberlevelrightsdetail_entity import \
    V1ServicesCustinfoGetmemberlevelrightsdetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_getmemberlevelrightscategorylist_entity import \
    V1ServicesCustinfoGetmemberlevelrightscategorylistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_viewmemberlevelbanner_entity import \
    V1ServicesCustinfoViewmemberlevelbannerEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_savebehavior_entity import \
    V1ServicesCustinfoSavebehaviorEntity
from huaxin_restful_service.restful_xjb_service.v1_services_marketing_indexbanner_entity import \
    V1ServicesMarketingIndexbannerEntity
from huaxin_restful_service.restful_xjb_service.v1_services_marketing_mainpagealert_entity import \
    V1ServicesMarketingMainpagealertEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_gethotproductlist_entity import \
    V1ServicesProductGethotproductlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_getproductlist_entity import \
    V1ServicesProductGetproductlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_getproductintro_entity import \
    V1ServicesProductGetproductintroEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_investplandetails_entity import \
    V1ServicesFundInvestplandetailsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_getsignatureagreementinfo_entity import \
    V1ServicesAccountGetsignatureagreementinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_getsalaryfinplandetail_entity import \
    V1ServicesTradeGetsalaryfinplandetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_vipproductfastredeemtip_entity import \
    V1ServicesTradeVipproductfastredeemtipEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_vipproductfastredeemlimitinfo_entity import \
    V1ServicesTradeVipproductfastredeemlimitinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_riskvalidate_entity import \
    V1ServicesAccountRiskvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_riskgetmobilecode_entity import \
    V1ServicesAccountRiskgetmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_getloginhistory_entity import \
    V1ServicesAccountGetloginhistoryEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_tradepasswordvalidate_entity import \
    V1ServicesSecurityTradepasswordvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_smscodevalidate_entity import \
    V1ServicesSecuritySmscodevalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_facerecognitionvalidate_entity import \
    V1ServicesSecurityFacerecognitionvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_setmelontype_entity import \
    V1ServicesTradeSetmelontypeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_getfundredeemrate_entity import \
    V1ServicesFundGetfundredeemrateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_getnextpayday_entity import \
    V1ServicesFundGetnextpaydayEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_mycouponlist_entity import \
    V1ServicesPointsMycouponlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_saveattachment_entity import \
    V1ServicesCommonSaveAttachmentEntity
from huaxin_restful_service.restful_xjb_service.v1_services_security_sendsmscode_entity import \
    V1ServicesSecuritySendSmsCodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_message_getmessagecategorylist_entity import \
    V1ServicesMessageGetmessagecategorylistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_message_getcategorymessagelist_entity import \
    V1ServicesMessageGetcategorymessagelistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_xjbtransitasset_entity import \
    V1ServicesTradeXjbtransitassetEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_getpaymentlist_entity import \
    V1ServicesTradeGetPaymentListEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_securityvalidate_entity import \
    V1ServicesCreditcardSecurityValidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_getfinproductsearchconditiongroupList_entity import \
    V1ServicesProductGetFinProductSearchConditionGroupListEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_getallfinproductlist_entity import \
    V1ServicesProductGetAllFinProductListEntity
from huaxin_restful_service.restful_xjb_service.api_jointcard_applybrandsendsms_entity import \
    ApiJointcardApplybrandsendsmsEntity
from huaxin_restful_service.restful_xjb_service.api_common_checktoken_entity import \
    ApiCommonChecktokenEntity
from huaxin_restful_service.restful_xjb_service.api_jointcard_applybrandvalidate_entity import \
    ApiJointcardApplybrandvalidateEntity
from huaxin_restful_service.restful_xjb_service.api_jointcard_applybrandpresubmit_entity import \
    ApiJointcardApplybrandpresubmitEntity
from huaxin_restful_service.restful_xjb_service.api_jointcard_applybrandsubmit_entity import \
    ApiJointcardApplybrandsubmitEntity
from huaxin_restful_service.restful_xjb_service.v1_services_message_closepush_entity import \
    V1ServicesMessageCloseplushEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_activeciticjointcardsendmobilecode_entity import \
    V1ServicesCreditcardActiveCiticJointcardSendMobileCodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_creditcard_activeciticjointcardconfirm_entity import \
    V1ServicesCreditcardActiveCiticJointcardConfirmEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_mycouponvalidate_entity import \
    V1ServicesPointsMycouponvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_assetcertapply_entity import \
    V1ServicesAccountAssetcertapplyEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_gradeorglist_entity import \
    V1ServicesFundGradeorglistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_shiborexponent_entity import \
    V1ServicesFundshiborExponentEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_assetcertpreview_entity import \
    V1ServicesAccountAssetcertpreviewEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_savetolocal_entity import \
    V1ServicesCustinfoSavetolocalEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_modifymobilecheckinfo_entity import \
    V1ServicesAccountmodifymobilecheckinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_assetcertapplyrecord_entity import \
    V1ServicesAccountAssetcertapplyrecordEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_assetsendtypeinfo_entity import \
    V1ServicesAccountAssetcertsendtypeinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_accountinfo_entity import \
    V1ServicesCustinfoAccountinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_updatecustbaseinfo_entity import \
    V1ServicesCustinfoUpdatecustbaseinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_version_entity import \
    V1ServicesCommonVersionEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_fastredeeminfo_entity import \
    V1ServicesTradeFastredeeminfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_tip_entity import \
    V1ServicesTradeTipEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_mfchartinfo_entity import \
    V1ServicesFundMfchartinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_applyreservationcode_entity import \
    V1ServicesTradeApplyreservationcodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_queryreservationcodeauditstatus_entity import \
    V1ServicesTradeQueryreservationcodeauditstatusEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_getsearchconditiontree_entity import \
    V1ServicesTradeGetsearchconditiontreeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_riseinfo_entity import \
    V1ServicesFundRiseinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_statisticproductsearch_entity import \
    V1ServicesFundStatisticproductsearchEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_recommends_entity import \
    V1ServicesPointsRecommendsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_exchange_entity import \
    V1ServicesPointsexchangeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_version_entity import \
    V1ServicesProductVersionEntity
from huaxin_restful_service.restful_xjb_service.v1_services_trade_alltradestatus_entity import \
    V1ServicesTradeAlltradestatusEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_noticelist_entity import \
    V1ServicesFundNoticelistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_searchfinproduct_entity import \
    V1ServicesProductSearchfinproductEntity
from huaxin_restful_service.restful_xjb_service.v1_services_card_cardstatusinfo_entity import \
    V1ServicesCardCardstatusinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vipproductsfchartInfo_entity import \
    V1ServicesProductvipproductsfchartinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vipproductmfchartInfo_entity import \
    V1ServicesProductvipproductmfchartinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_support_entity import \
    V1ServicesCustinfoSupportEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_supportdetail_entity import \
    V1ServicesCustinfoSupportdetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_getshareandsplit_entity import \
    V1ServicesFundGetshareandsplitEntity
from huaxin_restful_service.restful_xjb_service.v1_services_notice_indexfincalendar_entity import \
    V1ServicesNoticeIndexfincalendarEntity
from huaxin_restful_service.restful_xjb_service.v1_services_notice_fincalendar_entity import \
    V1ServicesNoticeFincalendarEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_incomecalculator_entity import \
    V1ServicesProductIncomecalculatorEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_commonconfig_entity import \
    V1ServicesCommonCommonconfigEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_updatecustnamespell_entity import \
    V1ServicesCustinfoUpdatecustnamespellEntity
from huaxin_restful_service.restful_xjb_service.v1_services_notice_getpersonalsettinglist_entity import \
    V1ServicesNoticeGetpersonalsettinglistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_common_getenumlist_entity import \
    V1ServicesCommonGetenumlistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_smslogingetmobilecode_entity import \
    V1ServicesAccountSmslogingetmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_smslogin_entity import \
    V1ServicesAccountSmsloginEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_findinvestyieldproduct_entity import \
    V1ServicesFundFindinvestyieldproductEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_unbindingcapitalaccountgetmobilecode_entity import \
    V1ServicesAccountUnbindingcapitalaccountgetmobilecodeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_unbindingcapitalaccount_entity import \
    V1ServicesAccountUnbindingcapitalaccountEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vipproducthistoryprofit_entity import \
    V1ServicesProductVipproducthistoryprofitEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vipproducthistorynav_entity import \
    V1ServicesProductVipproducthistorynavEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vipproducthistoryincome_entity import \
    V1ServicesProductVipproducthistoryincomeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_mypointsinfo_entity import \
    V1ServicesPointsMypointsinfoEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_tradedetail_entity import \
    V1ServicesPointsTradedetailEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_welfarecenter_entity import \
    V1ServicesPointsWelfarecenterEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_exchangepointsgoods_entity import \
    V1ServicesPointsExchangepointsgoodsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_financefundautopurchasetip_entity import \
    V1ServicesFundFinancefundautopurchasetipEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_fundtransfervalidate_entity import \
    V1ServicesTradeextFundtransfervalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_getcombinationpaymentauth_entity import \
    V1ServicesTradeextGetcombinationpaymentauthEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_getcombinationpaymentplan_entity import \
    V1ServicesTradeextGetcombinationpaymentplanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_modifycombinationpaymentplan_entity import \
    V1ServicesTradeextModifycombinationpaymentplanEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_modifyfinancefundexpiredisposetype_entity import \
    V1ServicesTradeextModifyfinancefundexpiredisposetypeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_modifyfinancefundexpiredisposetypetip_entity import \
    V1ServicesTradeextModifyfinancefundexpiredisposetypetipEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_mydqbdetailhistory_entity import \
    V1ServicesTradeextMydqbdetailhistoryEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_myholdlisthistoryfund_entity import \
    V1ServicesTradeextMyholdlisthistoryfundEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_mobilevalidate_entity import \
    V1ServicesCustinfoMobilevalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vipproductsurvey_entity import \
    V1ServicesProductvipproductsurveyEntity
from huaxin_restful_service.restful_xjb_service.v1_services_product_vipproductruler_entity import \
    V1ServicesProductvipproductrulerEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_mytradepoints_entity import \
    V1ServicesTradeextMytradepointsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_myvipproductdetailhistory_entity import \
    V1ServicesTradeextMyvipproductdetailhistoryEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_myholdlisthistoryvipanddhb_entity import \
    V1ServicesTradeextMyholdlisthistoryvipanddhbEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_myfunddetailhistory_entity import \
    V1ServicesTradeextMyFunddetailhistoryEntity
from huaxin_restful_service.restful_xjb_service.v1_services_risk_getrisktypebyanswer_entity import \
    V1ServicesRiskGetrisktypebyanswerEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_savetaxtype_entity import \
    V1ServicesAccountSavetaxtypeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_account_gettaxtype_entity import \
    V1ServicesAccountGettaxtypeEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_signin_entity import \
    V1ServicesPointsSigninEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_saveshareresult_entity import \
    V1ServicesPointsSaveshareresultEntity
from huaxin_restful_service.restful_xjb_service.v1_services_points_getsignresult_entity import \
    V1ServicesPointsGetsignresultEntity
from huaxin_restful_service.restful_xjb_service.v1_services_fund_getfundtransactiondate_entity import \
    V1ServicesFundGetfundtransactiondateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_exclusiveproducts_entity import \
    V1ServicesCustinfoexclusiveproductsExEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_giftbag_entity import \
    V1ServicesCustinfoGiftbagEntity
from huaxin_restful_service.restful_xjb_service.v1_services_custinfo_birthdayrights_entity import \
    V1ServicesCustinfoBirthdayrightsEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_onekeyredeemvalidate_entity import \
    V1ServicesTradeextOnekeyredeemvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_fundredeemtip_entity import \
    V1ServicesTradeextFundredeemtipEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_lockedpurposelist_enrity import \
    V1ServicesTradeextLockedpurposelistEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_onekeyredeemamtvalidate_entity import \
    V1ServicesTradeextOnekeyredeemamtvalidateEntity
from huaxin_restful_service.restful_xjb_service.v1_services_tradeext_getcombinationpaymentconfirminfo_entity import \
    V1ServicesTradeextGetcombinationpaymentconfirminfoEntity

class MainResfulXjbEntity(object):
    def __init__(self):
        self._entity_factory = EntityFactory(status=True, concurrent_mode=False)
        self._domain_name = GlobalController.RESTFUL_CONNECT
        self._domain_name_uat = GlobalController.RESTFUL_CONNECT_UAT

        self._common_headers = None
        self._h5_headers = None
        self._common_headers_welfare = None
        self._current_device_id = None

        self.current_entity = None
        self.current_login_token = None
        self.current_login_serial_no = None
        self.current_register_serialno = None
        self.current_mobile_code = None
        self.current_set_trade_passowrd_serialno = None
        self.current_get_mobile_code_serialno = None
        self.current_recharge_serialno = None
        self.current_purchase_product_serialno = None
        self.current_redeem_product_share_serialno = None
        self.current_withdraw_serialno = None
        self.current_modify_login_pwd_check_old_pwd_serialno = None
        self.current_modify_trade_pwd_check_old_pwd_serialno = None
        self.current_delete_bank_card_serialno = None
        self.current_trade_password_validate_serialno = None
        self.current_repay_serialno = None
        self.current_bank_card_id = None
        self.card_no = None
        self.current_vip_product_fast_redeem_tip_serialno = None
        self.trade_confirm_serialno = None
        self.trade_confirm_validate_type = None
        self.current_creditcard_repay_serialno = None
        self.current_creditcard_repay_validate_type = None
        self.current_coupon_id = None
        self.current_sms_serial_no = None
        self.current_unbiding_serial_no = None
        self.current_fund_transfer_serial_no = None

    @property
    def common_headers(self, client_version='a-3.3.0', app_channel='XJB'):
        if not self._common_headers:
            self._common_headers = {'clientVersion': client_version}
            device_id = self.current_device_id

            if device_id:
                self._common_headers.update({'deviceId': device_id})
            else:
                raise Exception('device id is not generated!')

        return self._common_headers

    @property
    def common_headers_uat(self, client_version='a-3.3.0'):
        if not self._common_headers:
            self._common_headers = {'clientVersion': client_version}
            device_id = self.current_device_id_uat

            if device_id:
                self._common_headers.update({'deviceId': device_id})
            else:
                raise Exception('device id is not generated!')

        return self._common_headers

    @property
    def h5_headers(self, client_version='a-3.3.0', channel='5'):
        if not self._h5_headers:
            self._h5_headers = {'clientVersion': client_version, 'channel': channel}
            device_id = self.current_device_id
            if device_id:
                self._h5_headers.update({'deviceId': device_id})
            else:
                raise Exception('device id is not generated!')

        return self._h5_headers

    @property
    def common_headers_welfare(self, client_version='a-3.3.0', app_channel='XJB'):
        if not self._common_headers_welfare:
            self._common_headers_welfare = {'clientVersion': client_version, 'appChannel': app_channel}
            device_id = self.current_device_id

            if device_id:
                self._common_headers_welfare.update({'deviceId': device_id})
            else:
                raise Exception('device id is not generated!')

        return self._common_headers_welfare

    @property
    def current_device_id(self):
        if not self._current_device_id:
            device_info = u"{\"uuid\":\"AD982D9C-1992-367A-B6E6-54086C1040B5\",\"buildNo\":\"1607\",\"idfa\":\"0CF7678B-BE2B-4DC4-9079-78D9D831F197\",\"osVersion\":\"7.0\",\"appId\":\"com.shhxzq.xjbEnt\",\"locale\":\"zh\",\"os\":\"android\",\"isJailBroken\":\"0\",\"density\":\"3.0\",\"appVersion\":\"3.0.0\",\"model\":\"ZUK Z2131\",\"carrier\":\"-\",\"resolution\":\"640x1136\"}"
            last_12_random = Utility().GetData().GenAlphanumeric(12).upper()
            device_info = device_info.replace('78D9D831F197', last_12_random)

            self._current_device_id = self.get_device_id(deviceInfo=device_info)

        return self._current_device_id

    @property
    def current_device_id_uat(self):
        if not self._current_device_id:
            device_info = u"{\"uuid\":\"AD982D9C-1992-367A-B6E6-54086C1040B5\",\"buildNo\":\"1607\",\"idfa\":\"0CF7678B-BE2B-4DC4-9079-78D9D831F197\",\"osVersion\":\"7.0\",\"appId\":\"com.shhxzq.xjbEnt\",\"locale\":\"zh\",\"os\":\"android\",\"isJailBroken\":\"0\",\"density\":\"3.0\",\"appVersion\":\"3.0.0\",\"model\":\"ZUK Z2131\",\"carrier\":\"-\",\"resolution\":\"640x1136\"}"
            last_12_random = Utility().GetData().GenAlphanumeric(12).upper()
            device_info = device_info.replace('78D9D831F197', last_12_random)

            self._current_device_id = self.get_device_id_uat(deviceInfo=device_info)

        return self._current_device_id

    def get_device_id(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonAcquiredeviceidEntity, self._domain_name,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity.deviceId

    def get_device_id_uat(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonAcquiredeviceidEntity, self._domain_name_uat,
            **{'request_headers': self.common_headers_uat})

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity.deviceId

    def login(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesLoginDologinEntity, self._domain_name,
            **{'request_headers': self.common_headers})

        password = kwargs['password']
        current_device_id = self.current_device_id
        kwargs['password'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_login_token = entity.body_token
        self.current_login_serial_no = entity.body_serialNo

        return entity

    def login_uat(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesLoginDologinEntity, self._domain_name_uat,
            **{'request_headers': self.common_headers_uat})

        password = kwargs['password']
        current_device_id = self.current_device_id
        kwargs['password'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_login_token = entity.body_token

        return entity

    # 账户-登录（新）
    def login_new(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesLoginDologinnewEntity,
            self._domain_name,
            **{'request_headers': self.common_headers})
        # password = kwargs['password']
        # current_device_id = self.current_device_id
        # kwargs['password'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)
        self.current_entity = entity
        entity.send_request(**kwargs)
        self.current_login_token = entity.body_token
        self.current_login_serial_no = entity.body_serialNo
        return entity

    def register_get_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRegisterGetmobilecodeEntity, self._domain_name,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_register_serialno = entity.body_serialNo
        self.current_mobile_code = MysqlXjbTools().get_sms_verify_code(mobile=kwargs['mobile'],
                                                                       template_id='cif_register')

        return entity

    def register_confirm(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRegisterConfirmEntity, self._domain_name,
            **{'request_headers': self.common_headers})

        password = kwargs['password']
        current_device_id = self.current_device_id
        kwargs['password'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_login_token = entity.body_token

        return entity

    def card_set_trade_password(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardSettradepasswordEntity,
            self._domain_name, self.current_login_token,
            **{'request_headers': self.common_headers})

        password = kwargs['newPassword']
        current_device_id = self.current_device_id
        kwargs['newPassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_set_trade_passowrd_serialno = entity.body_serialNo

        return entity

    def card_match_channel(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardMatchchannelEntity,
            self._domain_name, self.current_login_token,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(bin=kwargs['card_bin'])

        return entity

    def card_get_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardGetmobilecodeEntity,
            self._domain_name, self.current_login_token,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_get_mobile_code_serialno = entity.body_serialNo
        self.card_no = kwargs['cardNo']
        self.current_mobile_code = '123456'
        # self.current_mobile_code = MysqlXjbTools().get_sms_verify_code(mobile=kwargs['mobile'],
        #                                                                template_id='cif_bindBankCard')
        return entity

    def card_new_binding(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardNewbindingEntity,
            self._domain_name, self.current_login_token,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    def recharge(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeEnchargevalidateEntity,
            self._domain_name, token=self.current_login_token,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_recharge_serialno = entity.body_serialNo

        return entity

    # 现金宝普取/快取验证
    def withdraw(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeWithdrawvalidateEntity,
            self._domain_name, token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_withdraw_serialno = entity.body_serialNo
        # self.current_bank_card_id = entity.body_cards[0]['bankCardId']
        self.current_bank_card_id = entity._data['bankCardId']

        return entity

    def get_cust_card_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardGetcustcardlistEntity,
            self._domain_name, token=self.current_login_token,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    def risk_evaluating(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRiskSavequestionEntity,
            self._domain_name, token=self.current_login_token,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    def purchase_product(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradePurchasevalidateEntity,
            self._domain_name, token=self.current_login_token,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_purchase_product_serialno = entity.body_serialNo

        return entity


    def purchase_product_unmatch(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradePurchasevalidateEntity,
            self._domain_name, token=self.current_login_token,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_purchase_product_serialno = entity.body_serialNo

        return entity



    def trade_confirm(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeConfirmEntity,
            self._domain_name, self.current_login_token,
            **{'request_headers': self.common_headers})

        self.current_entity = entity

        password = kwargs['password']
        current_device_id = self.current_device_id
        kwargs['password'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)
        self.trade_confirm_serialno = entity.body_serialNo
        self.trade_confirm_validate_type = entity.body_validateType

        return entity

    # 快取结果查询接口
    def withdraw_query(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeWithdrawqueryEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    def redeem_product_tip(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeVipfinancialredeemtipEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 定活宝赎回
    def redeem_dhb(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeDqbredeemvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        self.current_redeem_product_share_serialno = entity.body_serialNo
        return entity

    # 高端赎回份额
    def redeem_product_share(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeVipfinancialredeemvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_redeem_product_share_serialno = entity.body_serialNo

        return entity

    # 现金宝收支明细
    def get_xjb_trade_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeXjbtradelistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易记录
    def get_trade_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeTradelistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金赎回
    def redeem_product(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeRedeemEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_redeem_product_share_serialno = entity.body_serialNo

        return entity

    # 首页总资产
    def total_asset(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeIndextotalassetEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    def modify_login_pwd_check_old_pwd(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecurityModifypwdcheckpasswordEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity

        password = kwargs['oldPassword']
        current_device_id = self.current_device_id
        kwargs['oldPassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)

        self.current_modify_login_pwd_check_old_pwd_serialno = entity.body_serialNo

        return entity

    def modify_login_pwd_set_pwd(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecurityModifypwdsetpasswordEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity

        password = kwargs['newPassword']
        current_device_id = self.current_device_id
        kwargs['newPassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)

        return entity

    def modify_trade_pwd_check_old_pwd(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecurityChecktradepasswordEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity

        password = kwargs['password']
        current_device_id = self.current_device_id
        kwargs['password'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)

        self.current_modify_trade_pwd_check_old_pwd_serialno = entity.body_serialNo

        return entity

    def modify_trade_pwd_set_pwd(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecurityModifytradepasswordEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity

        password = kwargs['newPassword']
        current_device_id = self.current_device_id
        kwargs['newPassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)

        return entity

    def delete_bank_card(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardDeletevalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_delete_bank_card_serialno = entity.body_serialNo

        return entity

    def delete_card_confirm(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardDeleteEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity

        password = kwargs['tradePassword']
        current_device_id = self.current_device_id
        kwargs['tradePassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)

        return entity

    def trade_password_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountTradepasswordvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity

        password = kwargs['tradePassword']
        current_device_id = self.current_device_id
        kwargs['tradePassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)
        self.current_trade_password_validate_serialno = entity.body_serialNo

        return entity

    def modify_mobile_get_old_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecurityModifymobilegetoldmobilecodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_mobile_code = MysqlXjbTools().get_sms_verify_code(mobile=kwargs['mobile'],
                                                                       template_id='cif_changeMobile')

        return entity

    def modify_mobile_check_old_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecurityModifymobilecheckoldmobilecodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    def modify_mobile_get_new_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecurityModifymobilegetnewmobilecodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_mobile_code = MysqlXjbTools().get_sms_verify_code(mobile=kwargs['mobile'],
                                                                       template_id='cif_changeMobile')

        return entity

    def modify_mobile_check_new_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecurityModifymobilechecknewmobilecodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 首页累计收益获取
    def trade_asset_total_home_page(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeAssettotalEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 交易用户资产信息
    def trade_asset_detail_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeAssetdetaillistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金搜索提示
    def fund_search_suggestion(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundSearchsuggestionEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    def all_fund_company_fund_sizer(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundAllFundsizerEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    def specified_company_fund_sizer(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundFundsizerEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    def fund_sizer_by_fund_type(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundTypeFundsizerEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金热门搜索
    def fund_hot_search(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundFindhotsearchproductEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金-全部基金列表
    def fund_all_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundAlllistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金星级排行，全部基金显示
    def fund_all_star_level_sort(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundAllStarlevelsortEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金星级排行，全部基金类型，按星级排序
    def fund_all_order_star_level_sort(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundAllOrderStarlevelsortEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 删除自选基金
    def fund_del_fav(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonDelfavEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金星级排行，具体基金类型
    def fund_type_star_level_sort(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundStarlevelsortEntity,

            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金是否已经添加自选
    def fund_add_fav(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonAddfavEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金星级排行，具体基金类型，按星级排序
    def fund_type_order_star_level_sort(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundOrderStarlevelsortEntity,

            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 统计热门搜索基金
    def count_hot_search_fund(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundFindhotsearchproductEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 精选基金
    def fund_best_choices_fund_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundChoicenesslistEntity,

            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金八大分类
    def fund_eight_part(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundIndexchannelEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 全部基金公司
    def all_fund_company_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundFundcompanylistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金类型列表
    def all_fund_type_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundFundtypelistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金首页下方四大块内容
    def fund_index_four(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundIndexfourEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 新发基金
    def new_fund_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundNewfundEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 信用卡列表
    def get_cust_credit_card(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardGetcustcardsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 获取信用卡验证码
    def get_credit_card_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardGetmobilecodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_get_mobile_code_serialno = entity.body_serialNo
        self.current_mobile_code = MysqlXjbTools().get_sms_verify_code(mobile=str(kwargs['mobile']),
                                                                       template_id='credit_bind_card')

        return entity

    # 信用卡-卡状态信息
    def get_creditcard_card_status_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardCardstatusinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 信用卡-通道匹配
    def get_creditcard_match_channel(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardMatchchannelEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 信用卡-绑卡提交验证码确认
    def creditcard_bind(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardBindEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 我的积分
    def my_points(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsMypointsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 获取基金信息
    def get_fund_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundGetfundinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 计算可用积分
    def can_used_points_count(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsCanusedpointscountEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 信用卡还款验证
    def creditcard_repay_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardRepayvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_repay_serialno = entity.body_serialNo

        return entity

    # 信用卡还款
    def creditcard_repay(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardRepayEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        password = kwargs['tradePassword']
        current_device_id = self.current_device_id
        kwargs['tradePassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)
        entity.send_request(**kwargs)

        self.current_creditcard_repay_serialno = entity.body_serialNo
        self.current_creditcard_repay_validate_type = entity.body_validateType

        return entity

    # 信用卡预约还款
    def creditcard_repay_schedule(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardYyrepayvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_repay_serialno = entity.body_serialNo

        return entity

    # 信用卡还款提醒设置
    def creditcard_set_repay_reminder(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardSetrepayremindEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 信用卡删除
    def creditcard_delete_card(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardDeletecardvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_delete_bank_card_serialno = entity.body_serialNo

        return entity

    # 信用卡还款记录
    def creditcard_repay_record(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeTradelistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_delete_bank_card_serialno = entity.body_serialNo

        return entity

    # 保存基金组合百分比
    def save_fund_combination(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoSavecombinationEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 信用卡默认还款日
    def creditcard_default_repay_date(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardDefaultrepaydateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 信用卡真实还款日
    def creditcard_actual_repay_date(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardActualrepaydateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 获取基金经理
    def get_fund_manager_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundGetfundmanagerEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 信用卡预约还款取消
    def creditcard_yycanel(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardYycancelEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 积分定投计划制定成功后积分扣减情况
    def fund_used_points_investment_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeCaltaipfeeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 查询银行卡取现限额
    def card_withdraw_limit(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeCardwithdrawlimitEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 首页精品推荐
    def market_index_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesMarketingIndexlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 产品额度查询
    def product_left_amount(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeLeftamtEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 买入费率计算
    def trade_calt_fee(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeCaltfeeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金申购费率
    def get_fund_purchase_rate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundGetfundpurchaserateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 取现提示文案
    def with_draw_tip_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeWithdrawtipinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    #  充值提示文案
    def recharge_tip_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeRechargetipinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金-卖出 费用估算
    def trade_fund_calculate_value(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeCaltvalueEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 是否是联名卡
    def is_joint_card(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardIsjointcardEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 联名卡激活
    def activate_joint_card(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesJointcardActivitionEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 联名卡验证码
    def get_joint_card_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesJointcardGetmobilecodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_get_mobile_code_serialno = entity.body_serialNo
        self.current_mobile_code = MysqlXjbTools().get_sms_verify_code(mobile=str(kwargs['mobile']),
                                                                       template_id='cif_activeJointCardSuccess')
        return entity

    # 获取联名卡列表
    def get_joint_card_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesJointcardGetcustcardsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 设置联名卡限额
    def set_joint_card_limits(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesJointcardSetjointcardlimitsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 联名卡信息
    def joint_card_details(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesJointcardGetcustcarddetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 联名卡限额确认
    def joint_card_confirm_limits(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesJointcardConfirmjointcardlimitsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity

        password = kwargs['tradePassword']
        current_device_id = self.current_device_id
        kwargs['tradePassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)

        return entity

    # 现金宝累计收益
    def xjb_last_profit(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeXjblastprofitEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # logout
    def logout(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesLoginLogout,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 卡升级手机验证码获取
    def get_mobile_code_upgrade(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardGetmobilecodeupgradeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 我的预约码
    def my_reservation_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeMyreservationcodesEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 卡升级手机验证码确认
    def get_mobile_code_upgrade_confirm(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardGetmobilecodeupgradeconfirmEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 绑卡结果, 银联（异步）
    def binding_result(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardBindingresultEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 光大银行绑卡页面
    def ceb_binding_gateway_h5_page(self, **kwargs):
        entity = self._entity_factory.get_entity(
            PwapAgreeepaysignpreDoEntity,
            token=self.current_login_token
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 光大银行绑卡提交页面
    def ceb_binding_submit(self, **kwargs):
        entity = self._entity_factory.get_entity(
            CebDopostEntity,
            token=self.current_login_token
            # **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 查询预约码
    def query_reserve_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeQueryreservationcodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金，高端，定期宝持仓资产
    def my_hold_asset(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeMyholdlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 绑卡-查询所有通道信息
    def check_all_bank_channel_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardBankchannellistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 设置基金自选
    def set_fav_fund(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonAddfavEntity,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金12大分类
    def fund_twelve_part(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundAllchannelEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 优惠券列表
    def points_discount_coupon(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsCouponlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_coupon_id = entity.body_dataList[0]['couponId']

        return entity

    # 获取优惠券数量信息
    def get_coupon_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsGetcouponinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 撤单验证
    def revoke_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeRevokevalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 交易详情
    def query_trade_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeTradedetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 产品热门
    def hot_product_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductHotproductlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 我的定期宝产品详情
    def my_dqb_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeMydqbdetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 我的高端产品详情
    def my_vip_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeMyvipproductdetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 定期宝列表
    def dqb_product_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductDqbproductlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 高端列表
    def vip_product_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductVipproductlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 设置合格投资者
    def set_qualified_investor(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRiskSetqualifiedinvestorEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 我的基金产品详情
    def my_fund_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeMyfunddetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 首页收益信息
    def get_index_income_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeIndexincomeinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 获取用户基本信息
    def get_cust_base_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoGetcustbaseinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 搜索所有产品（定期、高端）
    def search_all_fin_product(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductSearchallfinproductEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-个人质押信息
    def trade_load_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeLoaninfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-我的质押列表
    def trade_my_loan_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeMyloanlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 质押借款申请
    def trade_loan_apply(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeLoanapplyEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 根据借款金额获取质押信息
    def trade_get_loan_apply_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeGetloanapplyinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 可质押产品详情
    def trade_loan_product_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeLoanproductdetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 高端赎回费率
    def vip_redeem_rate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductVipredeemrateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 高端申购费率
    def vip_purchase_rate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductVippurchaserateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 定期宝赎回获取收益信息
    def dqb_redeem_get_income_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeDqbredeemincomeinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 制定定投计划验证
    def fund_make_invest_plan_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundMakeinvestplanvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 基金赎回费用估算
    def fund_redeem_cost_calt_value(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeCaltvalueEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 获取基金定投列表
    def get_fund_invest_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundMyinvestplanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers})

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 暂停/恢复/终止定投计划验证
    def fund_handle_invest_plan_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundHandleinvestplanvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 风险评测-获取答题H5
    def  get_risk_question_by_type(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRiskGetquestionbytypeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-可质押产品列表
    def get_loan_product_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeLoanproductlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 通用-获取协议
    def get_agreements(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonGetagreementsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 工资理财-查询下个扣款日
    def get_next_pay_day(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeGetnextpaydayEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 工资理财-创建/修改工资理财计划
    def make_salary_fin_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeMakesalaryfinplanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 工资理财-终止/启用/暂停工资理财计划
    def update_salary_fin_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeUpdatesalaryfinplanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 工资理财 - 查询工资理财（历史）计划
    def get_salary_fin_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeGetsalaryfinplanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 工资代发-确认协议
    def confirm_salary_fin_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountConfirmsalaryfinplanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 会员等级-查询指定等级权益
    def get_member_level_right_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoGetmemberlevelrightslistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 工资代发-终止协议验证
    def stop_salary_fin_plan_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountStopsalaryfinplanvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 会员等级-查询指定权益详情
    def get_member_level_right_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoGetmemberlevelrightsdetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # Banner
    def marketing_index_banner(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesMarketingIndexbannerEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 会员等级 - 查询特殊权益
    def get_member_level_right_category_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoGetmemberlevelrightscategorylistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 工资代发-终止协议提交
    def stop_salary_fin_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountStopsalaryfinplanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        password = kwargs['password']
        current_device_id = self.current_device_id
        kwargs['password'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)
        return entity

    # 用户-保存会员等级banner浏览结果
    def view_member_level_banner(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoViewmemberlevelbannerEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # alert
    def marketing_main_page_alert(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesMarketingMainpagealertEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 用户-行为记录（提醒我）
    def save_behavior(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoSavebehaviorEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 工资代发-获取工资卡信息
    def get_salary_card_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardGetsalarycardinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-理财产品介绍
    def get_product_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductGetproductintroEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-热门理财产品
    def get_hot_product_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductGethotproductlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-理财产品列表
    def get_product_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductGetproductlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 功能
    def get_function_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonGetFunctionListEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 首页-产品营销信息
    def get_product_marketing_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesMarketingGetProductMarketingInfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 首页-资讯
    def get_doc_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonGetDocListEntity,
            self._domain_name_uat,
            # token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 搜索所有产品（定期、高端、基金）
    def search_all_product(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductSearchallproductEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-定投计划详情
    def fund_invest_plan_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundInvestplandetailsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 修改基金分红方式
    def set_melon_type(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeSetmelontypeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 查询工资理财计划详情
    def get_salary_fin_plan_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeGetsalaryfinplandetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 获取基金赎回费率
    def get_fund_redeem_rate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundGetfundredeemrateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-查询电子签名约定书信息
    def get_signature_agreement_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountGetsignatureagreementinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 获取下一扣款日期
    def get_fund_next_pay_day(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundGetnextpaydayEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 工资代发-匹配工资卡信息
    def match_salary_card(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountMatchsalarycardEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-高端极速赎回提示信息(V2.0)
    def get_vip_product_fast_redeem_tip(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeVipproductfastredeemtipEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-高端极速赎回限额信息(V2.0)
    def get_vip_product_fast_redeem_limit_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeVipproductfastredeemlimitinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 还贷-创建/修改还贷计划校验
    def make_plan_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRepayMakeplanvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_make_plan_validate_serialno = entity.body_serialNo
        return entity

    # 还贷-创建/修改还贷计划提交
    def make_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRepayMakeplanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity

        password = kwargs['tradePassword']
        current_device_id = self.current_device_id
        kwargs['tradePassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)
        return entity

    # 还贷-查询还贷计划列表
    def get_plan_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRepayGetplanlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 还贷-查询还贷计划详情
    def get_plan_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRepayGetplandetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 还贷-还贷准入
    def repay_check(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRepayCheckEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 注册-注册信息验证
    def register_verify_id(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRegisterVerifyidEntity,
            self._domain_name,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 还贷-查询还款提示
    def get_repay_tip(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRepayGetrepaytipEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 还贷-提额校验
    def check_raise_quota(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRepayCheckraisequotaEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 还贷-启用/暂停/删除还贷计划验证
    def update_plan_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRepayUpdateplanvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_update_plan_validate_serialno = entity.body_serialNo
        return entity

    # 还贷-启用/暂停/删除还贷计划提交
    def update_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRepayUpdateplanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity

        password = kwargs['tradePassword']
        current_device_id = self.current_device_id
        kwargs['tradePassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        entity.send_request(**kwargs)
        return entity

    # 账户-产品风险验证
    def get_risk_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountRiskvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 账户-风险测评发送短信
    def risk_get_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountRiskgetmobilecodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 账户-查询登录历史
    def get_login_history(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountGetloginhistoryEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

    # 安全-交易密码校验(V3.1)
    def get_trade_password_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecurityTradepasswordvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        password = kwargs['tradePassword']
        current_device_id = self.current_device_id
        kwargs['tradePassword'] = Utility.EncryptHandle().encrypt_password(password, current_device_id)

        self.current_entity = entity
        entity.send_request(**kwargs)

    # 安全-发送短信验证(V3.1)
    def send_sms_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecuritySendSmsCodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_send_sms_code_serialno = entity.body_serialNo
        return entity

    # 安全-短信验证码校验(V3.1)
    def get_sms_code_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecuritySmscodevalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

    # 安全-人脸识别校验(V3.1)
    def get_face_recognition_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesSecurityFacerecognitionvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

    # 基金-设置基金自选
    def add_fav(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoAddfavEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-删除基金自选
    def del_fav(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoDelfavEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers(client_version='a-1.5.0')}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-研究报告
    def research_report(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundResearchreportEntity,
            self._domain_name_uat,
            # token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-机构观点
    def org_view_point(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundOrgviewpointEntity,
            self._domain_name_uat,
            # token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-达人论基
    def intelligen_say(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundIntelligentsayEntity,
            self._domain_name_uat,
            # token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分-我的优惠券列表(V2.3)
    def get_my_coupon_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsMycouponlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-专家开讲
    def expert_say(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundExpertsayEntity,
            self._domain_name_uat,
            # token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 现金宝在途资产
    def xjb_transit_asset(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeXjbtransitassetEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 通用-保存附件信息（V3.1）
    def save_attachment(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonSaveAttachmentEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 获取现金管理支付列表
    def get_payment_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeGetPaymentListEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 消息中心-查询消息分类(V3.1)
    def get_message_category_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesMessageGetmessagecategorylistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 消息中心- 查询消息列表
    def get_category_message_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesMessageGetcategorymessagelistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 信用卡安全验证
    def credit_card_security_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardSecurityValidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 全部理财产品检索条件
    def product_search_condition_group_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductGetFinProductSearchConditionGroupListEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 全部理财产品列表
    def product_get_all_fin_product_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductGetAllFinProductListEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 中信联名卡checkToken
    def check_token(self, **kwargs):
        entity = self._entity_factory.get_entity(
            ApiCommonChecktokenEntity,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 中信联名卡申请基础校验发送
    def jointcard_apply_brand_sendsms(self, **kwargs):
        entity = self._entity_factory.get_entity(
            ApiJointcardApplybrandsendsmsEntity,
            token=self.current_login_token,
            **{'request_headers': self.h5_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 中信联名卡申请基础校验提交
    def joint_card_apply_brand_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            ApiJointcardApplybrandvalidateEntity,
            token=self.current_login_token,
            **{'request_headers': self.h5_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 中信联名卡申请预提交
    def joint_card_apply_brand_pre_submit(self, **kwargs):
        entity = self._entity_factory.get_entity(
            ApiJointcardApplybrandpresubmitEntity,
            token=self.current_login_token,
            **{'request_headers': self.h5_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 中信联名卡申请提交
    def joint_card_apply_brand_submit(self, **kwargs):
        entity = self._entity_factory.get_entity(
            ApiJointcardApplybrandsubmitEntity,
            token=self.current_login_token,
            **{'request_headers': self.h5_headers}
        )

        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 消息中心-关闭消息推送(V3.1)
    def close_push(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesMessageCloseplushEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 中信联名卡激活发送短信
    def citic_activation_send_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardActiveCiticJointcardSendMobileCodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 中信联名卡激活
    def citic_activation_citic_card(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardActiveCiticJointcardConfirmEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分-优惠券有效性校验(V3.1)
    def my_coupon_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsMycouponvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-资产证明申请(V1.6)
    def assert_cert_apply(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountAssetcertapplyEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-市场指数
    def maket_exponent(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundMarketexponentEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-首页沪深指数
    def csi_exponent(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundCsiexponentEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-评级机构列表
    def get_grade_orglist(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundGradeorglistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-Shibor
    def get_shibor_exponent(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundshiborExponentEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-资产证明预览
    def get_asset_cert_preview(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountAssetcertpreviewEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-登录是否显示图片验证码
    def is_display_captcha_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountIsdisplaycaptchacodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-查询交易密码审核状态信息
    def trade_password_check_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountTradepasswordcheckinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-二维码保存到本地
    def save_to_local(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoSavetolocalEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-高端报价式年化业绩比较基准
    def vip_rate_history(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeVipratehistoryEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-高端报价式产品修改到期处理方式
    def modify_expire_dispose_type(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeModifyexpiredisposetypeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-高端报价式产品修改到期处理方式提示信息
    def modify_expire_dispose_type_tip(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeModifyexpiredisposetypetipEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-查询修改手机号码审核状态信息
    def get_modify_mobile_check_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountmodifymobilecheckinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-资产证明申请记录
    def get_assert_cert_apply_record(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountAssetcertapplyrecordEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-资产证明发送方式tip
    def get_asset_send_type_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountAssetcertsendtypeinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-查询个人账户信息
    def get_account_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoAccountinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-查询我的邀请人
    def query_my_inviter(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoMyinviterEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-设置我的邀请人
    def set_my_inviter(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoSetmyinviterEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-获取省市
    def get_province_and_city(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoGetprovinceandcityEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-修改用户基本信息
    def update_cust_base_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoUpdatecustbaseinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-质押还款明细
    def loan_repay_detail_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeLoanrepaydetaillistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-质押还款申请
    def loan_repay_apply(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeLoanrepayapplyEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-获取质押利息和总金额
    def get_loan_repay_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeGetloanrepayinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 通用-全局版本号
    def get_version(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonVersionEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-极速赎回说明
    def fast_redeem_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeFastredeeminfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-Tip
    def fund_tip(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeTipEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 通用-上传地理位置
    def upload_geographic_location(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonUploadgeographiclocationEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-货币类月、季、年收益曲线
    def mf_chart_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundMfchartinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-申请预约码提交(V3.2)
    def apply_reservation_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeApplyreservationcodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-权益类月、季，年收益曲线
    def sf_chart_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundsfchartinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-查看预约码审核进度(V3.2)
    def query_reservation_code_audit_status(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeQueryreservationcodeauditstatusEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    #  基金-持有列表数据
    def my_fund_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeMyfundlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-获取搜索条件树(V3.2)
    def get_search_condition_tree(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeGetsearchconditiontreeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-发售预告列表
    def sell_notice(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductSellnoticeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-在售产品列表
    def sell_product_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductSellproductlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 信用卡-银行通道列表
    def bank_channel_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardbankchannellistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-详情页历史回报等
    def fund_rise_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundRiseinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-统计热门搜索基金
    def statistic_product_search(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundStatisticproductsearchEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分-赚积分
    def earn_points(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsEarnpointsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分-推荐任务
    def point_recommends(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsRecommendsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-统计热门搜索基金
    def static_product_search(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundStatisticproductsearchEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分-积分明细
    def points_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsPointsdetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分-花积分
    def spend_points(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsSpendpointsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分-推荐任务
    def point_recommends(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsRecommendsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-对比、组合收益曲线
    def fund_compare(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundCompareEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分-兑换
    def points_exchange(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsexchangeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-产品库版本号
    def product_version(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductVersionEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-所有交易状态
    def all_trade_status(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeAlltradestatusEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 现金宝炒股-获取资产信息
    def get_stock_asset_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesStockGetassetinfoEntity,
            self._domain_name_uat,
            token=self.current_login_token,
            **{'request_headers': self.common_headers_uat}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 信用卡-自动还款开启
    def auto_repay_open(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardAutorepayopenEntity,
            self._domain_name,
            token=self.current_login_token,
            ** {'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 信用卡-自动还款关闭
    def auto_repay_close(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardAutorepaycloseEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 信用卡-自动还款查询接口
    def auto_repay_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardAutorepaydetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-公告列表
    def fund_notice_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundNoticelistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-搜索定期或高端
    def search_fin_product(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductSearchfinproductEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-高端产品详情
    def vip_product_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductVipproductdetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-热搜关键词
    def fund_trending(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundTrendingEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 普卡-卡状态信息(兼容是否联名卡接口)
    def card_status_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardCardstatusinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-所有产品类别
    def all_product_tpes(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductAllproducttypesEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-高端权益类月、季，年收益曲线
    def vip_product_sfchart_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductvipproductsfchartinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-基金是否已添加自选
    def fund_is_fav(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoIsfavEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-高端货币类月、季，年收益曲线
    def vip_product_mfchart_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductvipproductmfchartinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-看好他（基金经理）
    def custinfo_support(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoSupportEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-基金历史净值
    def fund_nav_history(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundNavhistoryEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-基金经理看好情况
    def custinfo_support_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoSupportdetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-分红和拆分
    def get_share_and_split(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundGetshareandsplitEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-货币基金历史
    def fund_profit_history(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundProfithistoryEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 通知中心-首页理财日历（V3.3）
    def index_fin_calendar(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesNoticeIndexfincalendarEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 通知中心-理财日历（V3.3）
    def fin_calendar(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesNoticeFincalendarEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-收益计算器（V3.3）
    def income_calculator(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductIncomecalculatorEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 通用-获取配置项(V3.3)
    def common_config(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonCommonconfigEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-用户修改姓名拼音(V3.3)
    def update_cust_name_spell(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoUpdatecustnamespellEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 信用卡 - 卡详情
    def credit_card_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardCarddetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 通知中心-个人事项设置
    def get_personal_setting_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesNoticeGetpersonalsettinglistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 信用卡 - 还款结果轮询
    def creditcard_query_repay_result(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCreditcardQueryrepayresultEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 资讯 - 资讯分类
    def get_category_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesInfoGetcategorylistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 通用-获取枚举值
    def get_enum_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonGetenumlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户 - 光大提额获取formbean
    def ceb_bank_quota_form_bean(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountCebbankquotaformbeanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-短信验证登录获取短信验证码
    def sms_login_get_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountSmslogingetmobilecodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        self.current_sms_serial_no = entity.body_serialNo
        return entity

    # 账户-短信验证登录
    def sms_login(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountSmsloginEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-定投排行
    def find_invest_yield_product(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundFindinvestyieldproductEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-解绑资金账户发短信
    def unbinding_capital_account_get_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountUnbindingcapitalaccountgetmobilecodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        self.current_unbiding_serial_no = entity.body_serialNo
        return entity

    # 账户-解绑资金账户提交
    def unbinding_capital_account(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountUnbindingcapitalaccountEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-高端货币类产品历史收益
    def vip_product_history_profit(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductVipproducthistoryprofitEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-高端权益类产品历史收益
    def vip_product_history_nav(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductVipproducthistorynavEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 银行卡 - 重新签约发送短信验证码
    def card_sign_again_get_mobile_code(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardSignagaingetmobilecodeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        self.current_mobile_code = MysqlXjbTools().get_sms_verify_code(mobile=kwargs['mobile'],
                                                                       template_id='cif_bindBankCard')
        self.current_get_mobile_code_serialno = entity.body_serialNo

        return entity

    # 银行卡 - 重新签约
    def card_sign_again(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCardSignagainEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 通用 - 开锁页面格言
    def get_maxim(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCommonGetmaximEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 产品-高端历史回报相关内容
    def vip_product_history_income(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductVipproducthistoryincomeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)

        return entity

    # 消息中心 - 首页Tips
    def msg_index_tips(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesMessageIndextipsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分-福利中心主页积分信息
    def my_points_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsMypointsinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分-福利中心交易明细
    def trade_detail(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsTradedetailEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户 - 用户实名信息验证
    def real_name_auth_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountRealnameauthvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易 - 基金转换
    def fund_transfer_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextFundtransfervalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        self.current_fund_transfer_serial_no = entity.body_serialNo
        return entity

    # 积分 - 福利中心
    def welfare_center(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsWelfarecenterEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers_welfare}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品 - 转换提示信息
    def transfer_to_fund_tip(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductTransfertofundtipEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分 - 兑换积分商品
    def exchange_points_goods(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsExchangepointsgoodsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品 - 转换基本信息
    def transfer_to_fund_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductTransfertofundinfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-理财型基金自动续存提示文案
    def finance_fund_auto_purchase_tip(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundFinancefundautopurchasetipEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品 - 检索可转换基金
    def search_can_transfer_fund_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductSearchcantransferfundlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品 - 可转换基金列表
    def can_transfer_fund_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductCantransferfundlistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-理财型基金修改到期处理方式
    def modify_finance_fund_expire_dispose_type(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextModifyfinancefundexpiredisposetypeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-理财型基金修改到期处理方式提示信息
    def modify_finance_fund_expire_dispose_type_tip(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextModifyfinancefundexpiredisposetypetipEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易 - 历史持仓列表(基金)
    def my_hold_list_history_fund(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextMyholdlisthistoryfundEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易 - 历史持仓列表(高端、定期宝)
    def my_hold_list_history_vip_or_dhb(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextMyholdlisthistoryvipanddhbEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 用户-校验手机号
    def mobile_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoMobilevalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易 - 历史持仓买卖点
    def my_trade_points(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextMytradepointsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-高端详情概况
    def vip_product_survey(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductvipproductsurveyEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易 - 我的历史基金产品详情
    def my_fund_detail_history(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextMyFunddetailhistoryEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 产品-高端详情规则
    def vip_product_ruler(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesProductvipproductrulerEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易 - 我的历史高端产品详情
    def my_vip_product_detail_history(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextMyvipproductdetailhistoryEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易 - 我的历史定期宝产品详情
    def my_dqb_detail_history(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextMydqbdetailhistoryEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 风险测评 - 测评结果预确认
    def get_risk_type_by_answer(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesRiskGetrisktypebyanswerEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户 - 税收居民身份申明
    def save_tax_type(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountSavetaxtypeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户 - 查询税收居民身份
    def get_tax_type(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountGettaxtypeEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分 - 获取积分、元宝说明
    def get_points_description(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsGetpointsdescriptionEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分 - 查询积分获取规则
    def get_points_deducte_rules(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsGetpointsdeducterulesEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分 - 签到
    def get_points_sign_in(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsSigninEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分 - 查询积分发放规则
    def get_points_issue_event_rules(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsGetpointsissueeventrulesEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分 - 保存分享结果
    def save_share_result(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsSaveshareresultEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-基金申购、认购、赎回费率
    def get_fund_transaction_date(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundGetfundtransactiondateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 积分 - 查询签到结果
    def get_sign_result(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesPointsGetsignresultEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 会员等级-权益专属产品
    def get_exclusive_products(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoexclusiveproductsExEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 会员等级 - 权益表格数据
    def cust_level_form_data(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoLevelformdataEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 会员等级-权益优惠券/积分礼包
    def get_gift_bag(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoGiftbagEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 会员等级-权益生日特权
    def get_birthday_rights(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesCustinfoBirthdayrightsEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-一键随心取提交
    def one_key_redeem_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextOnekeyredeemvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-查询组合支付权限
    def get_combination_payment_auth(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextGetcombinationpaymentauthEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-查询组合支付方案
    def get_combination_payment_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextGetcombinationpaymentplanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-修改组合支付方案
    def modify_combination_payment_plan(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextModifycombinationpaymentplanEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-基金赎回提示信息
    def fund_redeem_tip(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextFundredeemtipEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-锁定用途列表
    def locked_purpose_list(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextLockedpurposelistEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-锁定用途列表
    def one_key_redeem_amt_validate(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextOnekeyredeemamtvalidateEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 交易-查询组合支付确认信息
    def get_combination_payment_confirm_info(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesTradeextGetcombinationpaymentconfirminfoEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-估值排行
    def fund_estimate_leader_board(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundEstimateleaderboardEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-最新估值
    def get_current_estimate_nav(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundGetcurrentestimatenavEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 基金-自选基金最新估值
    def fav_fund_estimate_nav(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesFundFavfundestimatenavEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

    # 账户-打开/关闭短信验证码登录
    def save_sms_login_status(self, **kwargs):
        entity = self._entity_factory.get_entity(
            V1ServicesAccountSavesmsloginstatusEntity,
            self._domain_name,
            token=self.current_login_token,
            **{'request_headers': self.common_headers}
        )
        self.current_entity = entity
        entity.send_request(**kwargs)
        return entity

if __name__ == '__main__':
    m = MainResfulXjbEntity()
    m.login(user_name='13957372606', password='12qwaszx')
    # m.search_all_fin_product(user_name='17200000321', password='12qwaszx', keyword='restful')
